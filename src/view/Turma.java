/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Controler.Controle;
import Model.AlunoBEAN;
import Model.DisciplinaBEAN;
import Model.FaculdadeBEAN;
import Model.ProfessorBEAN;
import Model.TurmaBEAN;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author walte
 */
public class Turma extends javax.swing.JFrame {

    javax.swing.table.DefaultTableModel modelo;
    javax.swing.table.DefaultTableModel modeloAluno;
    javax.swing.table.DefaultTableModel modeloTurmaAluno;
    Controle controle = new Controle();

    public Turma() {
        initComponents();
        atualizaTabela();
        atualizaTabelaAluno();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        faculdadeCombo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        novo = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        disciplinaCombo = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        status1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        pesquisa = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        ano = new javax.swing.JTextField();
        semestre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaTurmaAluno = new javax.swing.JTable();
        professorCombo = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaAlunos = new javax.swing.JTable();
        add = new javax.swing.JButton();
        remove = new javax.swing.JButton();

        faculdadeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));

        jLabel6.setText("Faculdade");

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ATIVADO", "DESATIVADO" }));

        jLabel3.setText("Status");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        novo.setText("Novo");
        novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoActionPerformed(evt);
            }
        });

        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        excluir.setText("Excluir");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        jButton1.setText("Limpar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("TURMA");

        disciplinaCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));

        jLabel7.setText("Disciplina");

        status1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ATIVADO", "DESATIVADO" }));

        jLabel4.setText("Status");

        pesquisa.setText("Pesquisa");
        pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaActionPerformed(evt);
            }
        });

        jLabel8.setText("ID");

        semestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semestreActionPerformed(evt);
            }
        });

        jLabel1.setText("Semestre");

        jLabel2.setText("Ano");

        tabelaTurmaAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Turma Aluno"
            }
        ));
        tabelaTurmaAluno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaTurmaAlunoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaTurmaAluno);

        professorCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));

        jLabel9.setText("Professor");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "semestre", "ano"
            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabela);
        if (tabela.getColumnModel().getColumnCount() > 0) {
            tabela.getColumnModel().getColumn(1).setHeaderValue("semestre");
            tabela.getColumnModel().getColumn(2).setHeaderValue("ano");
        }

        tabelaAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alunos"
            }
        ));
        tabelaAlunos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAlunosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabelaAlunos);

        add.setText(">>");

        remove.setText("<<");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(remove)
                            .addComponent(add))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(novo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(salvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(excluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(professorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8))
                                    .addGap(31, 31, 31)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(semestre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1))
                                    .addGap(28, 28, 28)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(ano, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pesquisa))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(disciplinaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(status1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pesquisa)
                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(disciplinaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(status1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(7, 7, 7)
                .addComponent(professorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salvar)
                            .addComponent(excluir)
                            .addComponent(cancelar)
                            .addComponent(novo)
                            .addComponent(jButton1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(add)
                        .addGap(29, 29, 29)
                        .addComponent(remove)
                        .addGap(70, 70, 70))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoActionPerformed

        if (semestre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo semestre vazio!");
            semestre.requestFocus();
        } else if (ano.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo ano vazio!");
            ano.requestFocus();
        } else {
            DisciplinaBEAN unicaDisc = new DisciplinaBEAN();
            unicaDisc.setNome_disciplina((String) disciplinaCombo.getSelectedItem());
            unicaDisc = controle.unicaDisciplina(unicaDisc);

            ProfessorBEAN unicoProf = new ProfessorBEAN();
            unicoProf.setNome_professor((String) professorCombo.getSelectedItem());
            unicoProf = controle.unicoProfessor(unicoProf);

            TurmaBEAN turma = new TurmaBEAN(unicaDisc.getCodigo_disciplina(), unicoProf.getCodigo_professor(),
                    Integer.parseInt(semestre.getText()), Integer.parseInt(ano.getText()), 0);
            controle.addTurma(turma);
            atualizaTabela();
            limpaCampos();
        }


    }//GEN-LAST:event_novoActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        DisciplinaBEAN unicaDisc = new DisciplinaBEAN();
        unicaDisc.setNome_disciplina((String) disciplinaCombo.getSelectedItem());
        unicaDisc = controle.unicaDisciplina(unicaDisc);

        ProfessorBEAN unicoProf = new ProfessorBEAN();
        unicoProf.setNome_professor((String) professorCombo.getSelectedItem());
        unicoProf = controle.unicoProfessor(unicoProf);

        TurmaBEAN turma = new TurmaBEAN(unicaDisc.getCodigo_disciplina(), unicoProf.getCodigo_professor(),
                Integer.parseInt(semestre.getText()), Integer.parseInt(ano.getText()), status.getSelectedIndex());

        controle.updateTurma(turma);
        atualizaTabela();
        limpaCampos();
        novo.setEnabled(true);
        semestre.requestFocus();
        salvar.setEnabled(false);
        excluir.setEnabled(false);
    }//GEN-LAST:event_salvarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        if (status.getSelectedIndex() == 0) {
            TurmaBEAN turma = new TurmaBEAN(Integer.parseInt(codigo.getText()));
            controle.deleteTurma(turma);
            atualizaTabela();
            limpaCampos();
            novo.setEnabled(true);
            semestre.requestFocus();
            salvar.setEnabled(false);
            excluir.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "Turma ja excluido!");
        }
    }//GEN-LAST:event_excluirActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        limpaCampos();
        new Menu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        limpaCampos();
        novo.setEnabled(true);
        salvar.setEnabled(false);
        excluir.setEnabled(false);
        semestre.requestFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaActionPerformed
        TurmaBEAN turma = new TurmaBEAN();
        turma.setAno_turma(Integer.parseInt(ano.getText()));

        ArrayList<TurmaBEAN> listTurma = controle.listaTurmaPorAno(turma);

        if (listTurma.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Disciplina não encontrada!");
        } else {
            preencher_tabela(listTurma);
        }
    }//GEN-LAST:event_pesquisaActionPerformed

    private void semestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semestreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semestreActionPerformed

    private void tabelaTurmaAlunoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaTurmaAlunoMouseClicked

    }//GEN-LAST:event_tabelaTurmaAlunoMouseClicked

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        int linhaEditora = tabela.getSelectedRow();

        this.codigo.setText(tabela.getValueAt(linhaEditora, 0).toString());
        this.semestre.setText(tabela.getValueAt(linhaEditora, 1).toString());

        TurmaBEAN listaTurma
                = controle.listaStatusTurma(Integer.parseInt(tabela.getValueAt(linhaEditora, 0).toString()));

        if (listaTurma.getStatus_turma() == 0) {
            this.status.setSelectedIndex(0);
            DisciplinaBEAN listaUnicaDisc
                    = controle.listaStatusDisciplina(listaTurma.getFk_codigo_disciplina());
            ProfessorBEAN listaUnicoProf
                    = controle.listaStatusProfessor(listaTurma.getFk_codigo_professor());
            preencher_comboAtivo(listaUnicaDisc, listaUnicoProf);
            this.disciplinaCombo.setSelectedItem(listaUnicaDisc.getNome_disciplina());
            this.professorCombo.setSelectedItem(listaUnicoProf.getNome_professor());

        } else {

            this.status.setSelectedIndex(1);
            DisciplinaBEAN listaUnicaDisc
                    = controle.listaStatusDisciplina(listaTurma.getFk_codigo_disciplina());
            ProfessorBEAN listaUnicoProf
                    = controle.listaStatusProfessor(listaTurma.getFk_codigo_professor());
            preencher_comboBoxInativo(listaUnicaDisc, listaUnicoProf);
            this.disciplinaCombo.setSelectedItem(listaUnicaDisc.getNome_disciplina());
            this.professorCombo.setSelectedItem(listaUnicoProf.getNome_professor());

        }

        this.semestre.setText(String.valueOf(listaTurma.getSemestre_turma()));
        this.ano.setText(String.valueOf(listaTurma.getAno_turma()));
        System.out.println(tabela.getValueAt(linhaEditora, 2).toString());

        novo.setEnabled(false);
        salvar.setEnabled(true);
        excluir.setEnabled(true);
    }//GEN-LAST:event_tabelaMouseClicked

    private void tabelaAlunosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAlunosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaAlunosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Turma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Turma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Turma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Turma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Turma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField ano;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField codigo;
    private javax.swing.JComboBox<String> disciplinaCombo;
    private javax.swing.JButton excluir;
    private javax.swing.JComboBox<String> faculdadeCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton novo;
    private javax.swing.JButton pesquisa;
    private javax.swing.JComboBox<String> professorCombo;
    private javax.swing.JButton remove;
    private javax.swing.JButton salvar;
    private javax.swing.JTextField semestre;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JComboBox<String> status1;
    private javax.swing.JTable tabela;
    private javax.swing.JTable tabelaAlunos;
    private javax.swing.JTable tabelaTurmaAluno;
    // End of variables declaration//GEN-END:variables

    private void limpaCampos() {
        semestre.setText("");
        ano.setText("");
    }

    private void atualizaTabela() {
        this.modelo = (javax.swing.table.DefaultTableModel) tabela.getModel();

        List<TurmaBEAN> listaTurmas = controle.listaTurma();
        preencher_tabela(listaTurmas);

        List<DisciplinaBEAN> listaDisciplina = controle.listaDisciplinas();
        List<ProfessorBEAN> listaProfessor = controle.listaProfessores();
        preencher_comboBox(listaDisciplina, listaProfessor);

        codigo.setEnabled(false);
    }

    public void preencher_tabela(List<TurmaBEAN> listTurma) {

        tabela.getColumnModel().getColumn(0).setPreferredWidth(100);
        tabela.getColumnModel().getColumn(1).setPreferredWidth(400);
        tabela.getColumnModel().getColumn(2).setPreferredWidth(500);
        //tabela.getColumnModel().getColumn(3).setPreferredWidth(500);

        modelo.setNumRows(0);
        try {
            for (TurmaBEAN turma : listTurma) {
                //modelo.addRow(new Object[]{disc.getCodigo_disciplina(), disc.getNome_disciplina(), disc.getUltimaAtualizacao()});
                modelo.addRow(new Object[]{turma.getCodigo_turma(), turma.getSemestre_turma(), turma.getAno_turma()});
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro ao listar dados - " + erro);
        }
    }

    private void preencher_comboBox(List<DisciplinaBEAN> listaDisc, List<ProfessorBEAN> listaProf) {
        disciplinaCombo.removeAllItems();
        professorCombo.removeAllItems();
        try {

            for (DisciplinaBEAN disc : listaDisc) {
                disciplinaCombo.addItem(disc.getNome_disciplina());
            }
            for (ProfessorBEAN prof : listaProf) {
                professorCombo.addItem(prof.getNome_professor());
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao listar dados - " + e);
        }
    }

    private void preencher_comboBoxInativo(DisciplinaBEAN disc, ProfessorBEAN prof) {
        disciplinaCombo.removeAllItems();
        professorCombo.removeAllItems();
        try {

            disciplinaCombo.addItem(disc.getNome_disciplina());
            professorCombo.addItem(prof.getNome_professor());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao listar dados - " + e);
        }
    }

    private void preencher_comboAtivo(DisciplinaBEAN disc, ProfessorBEAN prof) {
        disciplinaCombo.removeAllItems();
        professorCombo.removeAllItems();
        try {

            disciplinaCombo.addItem(disc.getNome_disciplina());
            professorCombo.addItem(prof.getNome_professor());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao listar dados - " + e);
        }
    }

    private void atualizaTabelaAluno() {
        this.modeloAluno = (javax.swing.table.DefaultTableModel) tabelaAlunos.getModel();

        List<AlunoBEAN> listaAlunos = controle.listaAluno();
        preencher_tabelaAlunos(listaAlunos);
    }

    public void preencher_tabelaAlunos(List<AlunoBEAN> listAluno) {

        tabelaAlunos.getColumnModel().getColumn(0).setPreferredWidth(400);
        //tabela.getColumnModel().getColumn(1).setPreferredWidth(400);
        //tabela.getColumnModel().getColumn(2).setPreferredWidth(500);
        //tabela.getColumnModel().getColumn(3).setPreferredWidth(500);

        modeloAluno.setNumRows(0);
        try {
            for (AlunoBEAN aluno : listAluno) {
                //modelo.addRow(new Object[]{disc.getCodigo_disciplina(), disc.getNome_disciplina(), disc.getUltimaAtualizacao()});
                modeloAluno.addRow(new Object[]{aluno.getNome_aluno()});
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro ao listar dados - " + erro);
        }
    }
}
